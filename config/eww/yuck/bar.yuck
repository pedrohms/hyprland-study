(deflisten workspaces "./scripts/workspaces")
(defpoll wifi-icon :interval "10s" "./scripts/wifi icon")
(defpoll wifi-strength :interval "10s" "./scripts/wifi percentage")
(defpoll vol-icon :interval "1s" "./scripts/volume icon")
(defpoll bat-icon :interval "1m" "./scripts/battery icon")
(defpoll bat-lvl :interval "1m" "./scripts/battery level")
(defpoll volume :interval "1s" "./scripts/volume text")
(defpoll hours :interval "1s" 'date "+%H"')
(defpoll mins :interval "1s" 'date "+%M"')
(defpoll date :interval "1s" 'date "+%a %d %b"')
(defpoll br-lvl :interval "1s" `./scripts/brightness`)
(defpoll bt-icon :interval "1s" "./scripts/bluetooth")

(defvar control-rev false)
(defvar date-rev false)

(defwidget tray []
  (eventbox
    :onclick {control-rev ? "${eww} update control-rev=false" : "${eww} update control-rev=true"}
    :class "bar-tray"
    :halign "end"
    :space-evenly false
    (box
      (image :class "bar-icon bar-wifi-icon" :path wifi-icon :image-width "24" :image-height "24")
      (image :class "bar-icon bar-vol-icon" :path vol-icon :image-width "24" :image-height "24")
      (image :class "bar-icon bar-bat-icon" :path bat-icon :image-width "24" :image-height "24"))))

(defwidget workspaces []
  (literal :content workspaces))

(defwidget time []
  (eventbox
    :onhover "${eww} update date-rev=true"
    :onhoverlost "${eww} update date-rev=false"
    :class "bar-time"
    :halign "start"
    (box
      :spacing 0
      :space-evenly false
      (image :class "bar-icon bar-clock-icon" :path "./images/clock.svg" :image-width "24" :image-height "24")
      (label :class "bar-text" :text "${hours}ó°‡™${mins}")
      (revealer
        :transition "slideright"
        :reveal date-rev
        :duration "250ms"
        (label :class "bar-text" :orientation "h" :text date)))))

(defwidget nothing []
  (box
    :class "nothing"
    (label :class "bar-text" :text "nothing")))

(defwidget bar []
  (centerbox
    :orientation "h"
    :class "bar-widget"
    (time)
    (workspaces)
    (tray)))

(defwindow bar
  :stacking "fg"
  :monitor "0"
  :exclusive true
  :namespace "test"
  :geometry (geometry
              :x "0px"
              :y "12px"
              :width "98%"
              :height "50px"
              :anchor "bottom center")
  (bar))
